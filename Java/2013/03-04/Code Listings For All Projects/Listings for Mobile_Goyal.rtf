{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Calibri;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Code listings for "A Common Advertising Platform for Java ME Developers," Java Magazine, March/April 2013\
\
\pard\pardeftab720\ri334\sl276\slmult1\sa200

\f1\fs22 \cf0 [Listing 1]\
public class AdItem extends ImageItem implements ItemCommandListener \{\
  private String click_url;\
  private boolean overlayAd;\
  public AdItem(\
    String label, Image img, int layout, String altText, String click_url) \{\
    super(label, img, layout, altText);\
    this.click_url = click_url;\
    this.overlayAd = false;\
    Command openCommand = new Command("Open", Command.ITEM, 1);\
    addCommand(openCommand);\
    this.setItemCommandListener(this);\
  \}\
  \
  public void setOverlayAd(boolean overlayAd) \{ this.overlayAd = overlayAd; \}\
  public boolean isOverlayAd() \{ return this.overlayAd; \}\
\
  public void commandAction(Command c, Item item) \{\
    // this is where the click-through action will take place.\
    // that is, the user has shown interest in the ad by clicking on it\
    // for the overlay ad, the user could have been just clicking to close it\
    System.err.println("Clicked"); // call the click_url\
  \} \
\}\
\
[Listing 2]\
package org.adinjection;\
\
import javax.microedition.lcdui.*;\
import javax.microedition.midlet.MIDlet;\
\
public interface Advertisable \{\
  \
  public static final int ALL_AD_TYPES = 0;\
  public static final int TXT_AD_TYPE = 1;\
  public static final int IMG_AD_TYPE = 2;\
  public static final int OVL_AD_TYPE = 3;\
  \
  public static final int ALL_AD_LOCATIONS = 0;\
  public static final int TOP_AD_LOCATION = 1;\
  public static final int BOTTOM_AD_LOCATION = 2;\
  \
  public void initAdvertising();\
  public void destroyAdvertising();\
  \
  public Display getTargetDisplay();\
  public boolean receivesAds();\
  public int getCompatibleAdType();  \
  public int getCompatibleAdLocation();\
  \
  public int getPreferredAdWidth();\
  public int getPreferredAdHeight();  \
\}\
\
[Listing 3]\
  public Injector(Advertisable target, long adInterval) \{ \
\
    this.target = target;\
    this.adInterval = adInterval;\
    \
    new Thread() \{\
      public void run() \{\
        flag = true;\
        initAndDisplay();\
      \}\
    \}.start();\
    \
  \}\
\
[Listing 4]\
  private void initAndDisplay() \{\
    while(flag) \{      \
      try \{\
        Thread.sleep(this.adInterval);\
      \} \
      catch (Exception ex) \{\
        ex.printStackTrace();\
        return;\
        //\
      \}\
      inject();\
    \}    \
  \}\
\
[Listing 5]\
  public void inject() \{\
    \
    Displayable targetFormOrCanvas = target.getTargetDisplay().getCurrent();\
    \
    int target_width;\
    int target_height;\
    \
    // if all ad types can be shown then prefer the overlay ads\
    int show_ad_type = \
      (target.getCompatibleAdType() == Advertisable.ALL_AD_TYPES) ?\
        Advertisable.OVL_AD_TYPE : \
        target.getCompatibleAdType();\
\
    // if ad can be shown in all ad locations, prefer the top location\
    int show_ad_location = \
      (target.getCompatibleAdLocation() == Advertisable.ALL_AD_LOCATIONS) ?\
        Advertisable.TOP_AD_LOCATION : \
        target.getCompatibleAdLocation();\
    \
    if(show_ad_type == Advertisable.OVL_AD_TYPE) \{\
      target_width = targetFormOrCanvas.getWidth();\
      target_height = targetFormOrCanvas.getHeight();\
    \} else \{\
      target_width = target.getPreferredAdWidth();\
      target_height = target.getPreferredAdHeight();\
    \}\
    \
    if(target.receivesAds()) \{ // still receiving an ad?\
      \
      if(targetFormOrCanvas instanceof Form) \{ // form or canvas?\
        \
        Form _form = (Form)targetFormOrCanvas;\
        int form_size = _form.size();\
        AdItem ad_to_show = getAd(target_width, target_height, show_ad_type);\
        \
        if(show_ad_location == Advertisable.TOP_AD_LOCATION) \{ // top or bottom?          \
          if(_form.get(0) instanceof AdItem) \{ // replace ad\
            _form.set(0, ad_to_show);\
          \} else \{ // first ad\
            _form.insert(0, ad_to_show);\
          \}\
        \} else \{ // bottom ad location\
          if(_form.get(form_size - 1) instanceof AdItem) \{ // replace ad\
            _form.set(form_size - 1, ad_to_show);\
          \} else \{ // first ad\
            _form.insert(form_size, ad_to_show);\
          \}          \
        \}        \
        \
      \}\
    \}\
  \}\
\
[Listing 6]\
  public static AdItem getAd(\
    int width, int height, int ad_type, Injector caller) \{\
    \
    Image img;\
    AdItem adItem = null;\
    \
    try \{      \
      \
      if(ad_type == Advertisable.OVL_AD_TYPE) \{\
        \
        img = Image.createImage("/235X350.jpg");\
        adItem = new AdItem(\
          "", resample(img, width, height), \
          Item.LAYOUT_DEFAULT, "", "http://myurl");\
        adItem.setOverlayAd(true);        \
      \} else \{\
        \
        // for experiment, show a random ad from a set of 2 ads\
        int random = new Random().nextInt(2);         \
        \
        if(random == 0) img = Image.createImage("/234X60.jpg");\
        else img = Image.createImage("/234X60_inverted.jpg");\
        \
        adItem = new AdItem(\
          "", resample(img, width, height), \
          Item.LAYOUT_DEFAULT, "", "http://myurlB");        \
      \}     \
      \
    \} catch(Exception ex) \{\
      ex.printStackTrace();      \
    \}\
    \
    return adItem;\
    \
  \}\
\
[Listing 7]\
  // method implementations mandated by the Advertisable interface  \
 \
  // the display that needs to be modified\
  public Display getTargetDisplay() \{\
    return this.display;\
  \}\
  \
  // some business logic here could determine if at some point in time\
  // ads should be stopped\
  public boolean receivesAds() \{\
    return true;\
  \}\
  \
  public int getCompatibleAdType() \{\
    return IMG_AD_TYPE;\
  \}\
  \
  public int getCompatibleAdLocation() \{\
    return BOTTOM_AD_LOCATION;\
  \}  \
  \
  public void initAdvertising() \{\
    injector = new Injector(this, 5000);\
  \}  \
  \
  public void destroyAdvertising() \{\
    injector.destroy();\
    injector = null;\
  \}\
  \
  public int getPreferredAdWidth() \{\
    return mainForm.getWidth();\
  \}\
  \
  public int getPreferredAdHeight() \{\
    return (int)mainForm.getHeight() / 4;\
  \}\
\
\
Copyright 2013, Oracle Corporation\
}