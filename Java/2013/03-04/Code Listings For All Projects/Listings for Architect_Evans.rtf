{\rtf1\ansi\ansicpg1252\cocoartf1138\cocoasubrtf320
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 ArialMT;\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww17340\viewh14540\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Code listings for "Using Java 8 Lambda Expressions, Part 2," Java Magazine, March/April 2013\
\
\pard\pardeftab720\ri720

\f1\fs21 \cf0 [Listing 1]\
\pard\pardeftab720\ri720

\f2 \cf0 public default void sort(Comparator<? super E> c) \{\
    Collections.<E>sort(this, c);\
\}\
\pard\pardeftab720\ri720

\f1 \cf0 \
[Listing 2]\
\pard\pardeftab720\ri720

\f2 \cf0 List<String> myStrings = getSomeStrings();\
String search = getSearchString();\
System.out.println(myStrings.stream().filter(s -> s.equals(search)).into(new ArrayList<>()));\
\pard\pardeftab720\ri720

\f1 \cf0 \
[Listing 3]\
\pard\pardeftab720\ri720

\f2 \cf0         stream()   filter()   map()   into()\
Collection -> Stream -> Stream -> Stream -> Collection\
\pard\pardeftab720\ri720

\f1 \cf0 \
[Listing 4]\
\pard\pardeftab720\ri720

\f2 \cf0 public interface Stream<T> extends BaseStream<T> \{\
    Stream<T> filter(Predicate<? super T> predicate);\
    <R> Stream<R> map(Function<? super T, ? extends R> mapper);\
\}\
\pard\pardeftab720\ri720

\f1 \cf0 \
[Listing 5]\
\pard\pardeftab720\ri720

\f2 \cf0 Set<Otter> ots = getOtters();\
System.out.println(ots.stream()\
                      .filter(o -> !o.isWild())\
                      .map(o -> o.getKeeper())\
                      .filter(k -> k.isFemale())\
                      .into(new HashSet<>())\
                      .size());\
\pard\pardeftab720\ri720

\f1 \cf0 \
[Listing 6]\
\pard\pardeftab720\ri720

\f2 \cf0 Set<Otter> ots = getOtters();\
Keeper kate = new Keeper(Gender.F);\
Keeper bob = new Keeper(Gender.M);\
Otter splash = new Otter(Gender.F);\
splash.incAge();\
splash.setKeeper(kate);\
ots.add(splash);\
\
double aveAge = ((double) ots.stream().map(o -> o.getAge()).reduce(0, (x, y) -> \{return x + y;\} )) / ots.size();\
System.out.println("Average age: "+ aveAge);\
\pard\pardeftab720\ri720

\f1 \cf0 \
[Listing 7]\
\pard\pardeftab720\ri720

\f2 \cf0 ots.stream()\
   .filter(o -> !o.isWild())\
   .filter(o -> o.getKeeper().equals(kate))\
   .forEach(o -> o.setKeeper(bob));\
\pard\pardeftab720\ri-722

\f1 \cf0 \
\pard\pardeftab720\ri-722

\f2 \cf0 Copyright 2013 Oracle Corporation}